version: "3"
services:
  redis:
    image: "redis:latest"
    container_name: redis
  nginx:
    restart: always
    build:
      dockerfile: docker-prod.dockerfile
      context: ./nginx
    container_name: nginx
    ports:
      - "3050:80"
    depends_on:
      - redis
  prices:
    build:
      dockerfile: docker-prod.dockerfile
      context: ./services/prices/
    container_name: prices
    volumes: {}
    env_file:
      - ./services/prices/.env
    environment:
      - NODE_ENV=production
    ports:
      - 5000:5000
    depends_on:
      - redis
      - nginx
    command: npm run prod
  promotions:
    build:
      dockerfile: docker-prod.dockerfile
      context: ./services/promotions/
    container_name: promotions
    volumes: {}
    env_file:
      - ./services/promotions/.env
    environment:
      - NODE_ENV=production
    ports:
      - 5001:5001
    depends_on:
      - redis
      - nginx
    command: npm run prod
  upgrade-rules:
    build:
      dockerfile: docker-prod.dockerfile
      context: ./services/upgrade-rules/
    container_name: upgrade-rules
    volumes: {}
    env_file:
      - ./services/upgrade-rules/.env
    environment:
      - NODE_ENV=production
    ports:
      - 5002:5002
    depends_on:
      - redis
      - nginx
    command: npm run prod
  web:
    build:
      dockerfile: docker-prod.dockerfile
      context: ./services/upgrade-rules/
    container_name: web
    volumes: {}
    env_file:
      - ./services/web/.env
    environment:
      - NODE_ENV=production
    depends_on:
      - redis
      - nginx
      - prices
      - promotions
      - upgrade-rules
    ports:
      - 3000:3000

version: "3"
services:
  redis_db:
    image: "redis:alpine"
    command: ["redis-server", "--appendonly", "yes"]
    container_name: redis_db
    networks:
      - dashboard-dev
    ports:
      - 6379:6379
  nginx:
    restart: always
    build:
      dockerfile: docker-dev.dockerfile
      context: ./nginx
    container_name: nginx
    ports:
      - "3050:80"
    depends_on:
      - redis_db
    networks:
      - dashboard-dev
  user:
    build:
      dockerfile: docker-dev.dockerfile
      context: ./services/user/
    container_name: user
    volumes:
      - /home/user/node_modules
      - ./services/user:/home/user
    env_file:
      - ./services/user/.env
    environment:
      - NODE_ENV=development
    ports:
      - 4999:4999
    command: npm start
    networks:
      - dashboard-dev
  prices:
    build:
      dockerfile: docker-dev.dockerfile
      context: ./services/prices/
    container_name: prices
    volumes:
      - /home/prices/node_modules
      - ./services/prices:/home/prices
    env_file:
      - ./services/prices/.env
    environment:
      - NODE_ENV=development
      - REDIS_HOST_DEV=redis_db
      - AUTH_HOST_DEV=http://user
    ports:
      - 5000:5000
    command: npm start
    networks:
      - dashboard-dev
  promotions:
    build:
      dockerfile: docker-dev.dockerfile
      context: ./services/promotions/
    container_name: promotions
    volumes:
      - /home/promotions/node_modules
      - ./services/promotions:/home/promotions
    env_file:
      - ./services/promotions/.env
    environment:
      - NODE_ENV=development
      - REDIS_HOST_DEV=redis_db
      - AUTH_HOST_DEV=http://user
    ports:
      - 5001:5001
    command: npm start
    networks:
      - dashboard-dev
  upgrade-rules:
    build:
      dockerfile: docker-dev.dockerfile
      context: ./services/upgrade-rules/
    container_name: upgrade-rules
    volumes:
      - /home/upgrade-rules/node_modules
      - ./services/upgrade-rules:/home/upgrade-rules
    env_file:
      - ./services/upgrade-rules/.env
    environment:
      - NODE_ENV=development
      - REDIS_HOST_DEV=redis_db
      - AUTH_HOST_DEV=http://user
    ports:
      - 5002:5002
    command: npm start
    networks:
      - dashboard-dev
  web:
    build:
      dockerfile: docker-dev.dockerfile
      context: ./services/web/
    container_name: web
    volumes:
      - /home/web/node_modules
      - ./services/web:/home/web
    env_file:
      - ./services/web/.env
    environment:
      - NODE_ENV=development
      - API_PORT_PRICES=3050
      - API_PORT_PROMOTIONS=3050
      - API_PORT_UPGRADERULES=3050
    ports:
      - 8080:8080
    command: npm run start:dev
    networks:
      - dashboard-dev
networks:
  dashboard-dev:
